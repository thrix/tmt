story:
    As a tester I want to easily execute a group of selected tests
    in given environment.

description: |
    These metadata contain information for execution of multiple
    test cases such as how the environment for testing should be
    prepared, which set of test cases is relevant for testing
    specific artifact or which frameworks should be used for
    execution. Main points which motivated this effort:

    * Additional metadata for test execution needed, stored on various places
    * The tests.yml file defined by Standard Test Interface is limited
    * Human readable configuration for gating (replace gating.yaml)
    * Multiple gates in the release pipeline (pull request, build, update/errata)
    * Clearly separate testing steps (discover, provision, prepare, execute, report)
    * Support multiple tools implementing individual testing steps

    There are several levels of test execution data configuration.

    default
        global default settings (common for most instances)
    detect
        detect from previous steps output (e.g. distro from build)
    define
        allow to override value by explicit user configuration

    Let's demonstrate these on a simple example with a
    distribution compose (C) and the amount of memory (M).

    * CI system is configured by ``default`` to use compose ``C1`` installed on machines with ``M1`` GB of memory.
    * When inspecting an artifact CI can ``detect`` that for this particular build target, compose ``C2`` is a much better choice, and memory is fine as it is.
    * User can still explicitly ``define`` in the configuration that at least ``M2`` GB of memory is needed for successful test execution which overrides both default and detected values.
